/*
 * ----------------------------------------------------------------------
 *  Copyright (C) 2006-2012 Numenta Inc. All rights reserved.
 *
 *  The information and source code contained herein is the
 *  exclusive property of Numenta Inc. No part of this software
 *  may be used, reproduced, stored or distributed in any form,
 *  without explicit written authorization from Numenta Inc.
 * ---------------------------------------------------------------------- */(function(a){var b=a.GROK;b.Client=function(a,c){this._validated=!1;if(!b.util.isSet(a))throw new Error('Cannot create GROK Client without an API Key:\nnew GROK.Client("my-api-key");');c=c||{},c.apiKey=a,b.ApiObject.call(this,{},c),c.user&&c.user.id&&(this.setScalars(c.user),this._validated=!0),this.constructor=b.Client},b.Client.prototype=b.util.heir(b.ApiObject.prototype),b.Client.prototype.constructor=b.ApiObject,b.Client.NAMESPACE="users",b.Client.prototype.init=function(a){b.info("Connecting to Grok...");var c=this;this.makeRequest({method:"GET",path:"users",success:function(d){!d||!d.users?a(new Error("Client cannot understand response from API at "+c.getEndpoint()+". Are you sure this is the proper Grok API URL?")):(b.info("Connected to Grok."),c.setScalars(d.users[0]),c._validated=!0,a(null))},failure:function(b){b.message==="Unauthorized"?a(new Error('Invalid API key: "'+c.getApiKey()+'"')):a(b)}})},b.Client.prototype.isValidated=function(){return this._validated},b.Client.prototype.createProject=function(a,c){c=c||function(){},this.createObject(b.Project,{name:a},c)},b.Client.prototype.createModel=function(a,c){c=c||function(){},this.createObject(b.Model,a,c)},b.Client.prototype.createStream=function(a,c){c=c||function(){},this.createObject(b.Stream,a,c)},b.Client.prototype.getStream=function(a,c){c=c||function(){},this.getObject(b.Stream,a,function(b,d){b&&b.message==="Not Found"?c(new Error("Input stream '"+a+"' not found")):b?c(b):c(null,d)})},b.Client.prototype.getProject=function(a,c){this.getObject(b.Project,a,c)},b.Client.prototype.getModel=function(a,c){var d=this;this.getObject(b.Model,a,function(a,b){if(a)return c(a);b.setScalar("_parent",d),c(null,b)})},b.Client.prototype.listProjects=function(a){this.listObjects(b.Project,a)},b.Client.prototype.listModels=function(a){this.listObjects(b.Model,{all:!0},a)},b.Client.prototype.listStreams=function(a){this.listObjects(b.Stream,a)}})(window);