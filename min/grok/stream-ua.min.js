(function(global){var GROK=global.GROK;GROK.Stream=function(attrs,options){GROK.ApiObject.apply(this,arguments);this.constructor=GROK.Stream};GROK.Stream.prototype=GROK.util.heir(GROK.ApiObject.prototype);GROK.Stream.prototype.constructor=GROK.ApiObject;GROK.Stream.NAMESPACE="streams";GROK.Stream.AGGREGATION={RECORD:"record",SECONDS:"seconds",MINUTES:"minutes",MINUTES_15:"minutes15",HOURS:"hours",DAYS:"days",WEEKS:"weeks",MONTHS:"months"};GROK.Stream.DATATYPE={DATETIME:"DATETIME",CATEGORY:"CATEGORY",SCALAR:"SCALAR"};GROK.Stream.DATAFLAG={TIMESTAMP:"TIMESTAMP",LOCATION:"LOCATION"};GROK.Stream.AGGREGATION_FUNCTION={FIRST:"first",LAST:"last",AVERAGE:"average",SUM:"sum",MAX:"max",MIN:"min"};GROK.Stream.PREDICTION_TYPE={TEMPORAL:"temporal",SPATIAL:"spatial"};GROK.Stream.HOLIDAY_LOCALE={US_HOLIDAYS:"US-HOLIDAYS",UK_HOLIDAYS:"UK-HOLIDAYS",CA_HOLIDAYS:"CA-HOLIDAYS"};GROK.Stream.prototype.addData=function(rawData,callback){this.makeRequest({method:"POST",url:this.get("dataUrl"),data:{input:rawData},success:function(){callback()},failure:function(err){callback(err)}})};GROK.Stream.prototype.getInputData=function(callback){this.makeRequest({method:"GET",url:this.get("dataUrl"),success:function(resp){if(!resp.input){callback(new Error("malformed API response! "+'Expected "input" key.'))}else{callback(null,resp.input)}},failure:function(err){callback(err)}})}})(window);