/*
 * ----------------------------------------------------------------------
 *  Copyright (C) 2006-2012 Numenta Inc. All rights reserved.
 *
 *  The information and source code contained herein is the
 *  exclusive property of Numenta Inc. No part of this software
 *  may be used, reproduced, stored or distributed in any form,
 *  without explicit written authorization from Numenta Inc.
 * ---------------------------------------------------------------------- */(function(a){function h(a,b,c){var d;return Array.prototype.some.call(a,function(a,e,f){if(b.call(c,a,e,f))return d=e,!0}),d}function i(a){return a.data[a.data.length-1][a.names.indexOf(f)]}function j(a,b){b=b||{},this._poller=a,typeof b.interval=="undefined"?this._interval=c:typeof b.interval=="number"?this._interval=[b.interval,b.interval*10]:this._interval=b.interval,this._increment=b.increment||e,this._timeout=b.timeout||d,this._currentInterval=this._interval[0],this._debug=b.debug,this._pollIntervalId=-1,this._pollListeners=[],this._doneListeners=[],this._errorListeners=[],this._done=!1}function k(a,b){this._swarm=a,this._lastStatus=undefined,this._statusChangeListeners=[],j.call(this,this._swarmPoller,b)}function l(a,b){b=b||{},this._getOutputDataOpts=b.outputDataOptions||{limit:100,shift:!0},this._model=a,this._dataListeners=[],this._lastRowIdSeen=b.lastRowIdSeen||-1,j.call(this,this._outputPoller,b)}var b=a.GROK,c=[3e3,3e6],d=60,e=function(a){return a*2},f="ROWID",g="any";j.prototype.onPoll=function(a){return this._pollListeners.push(a),this},j.prototype.onDone=function(a){return this._doneListeners.push(a),this},j.prototype.onError=function(a){return this._errorListeners.push(a),this},j.prototype._fire=function(a,b){var c=0;a==="done"&&(this._done=!0),this["_"+a+"Listeners"].forEach(function(a){c++,a(b)}),this._print("Monitor called "+c+" "+a+" listeners")},j.prototype.start=function(){return this._startTime=(new Date).getTime(),this._print("Monitor starting"),this._pollAt(this._currentInterval),this},j.prototype._pollAt=function(a){var b=this,c=!1;this._pollIntervalId&&clearInterval(this._pollIntervalId),b._print("Polling at "+a),this._pollIntervalId=setInterval(function(){if(c)return;if(b._done){clearInterval(b._pollIntervalId);return}c=!0,b._print("Monitor polling..."),b._poller(function(a,d){b._print("Monitor received poll result"),b._print("new data recieved? "+new Boolean(d)),d?b._currentInterval!==b._interval[0]&&(b._currentInterval=b._interval[0],b._print("Resetting poll interval to "+b._currentInterval),b._pollAt(b._currentInterval)):b._currentInterval!==b._interval[1]&&(b._currentInterval=Math.min(b._increment(b._currentInterval),b._interval[1]),b._pollAt(b._currentInterval)),b._done||b._fire("poll",a),c=!1})},a)},j.prototype.stop=function(){var a=(new Date).getTime()-this._startTime;return this._print("Monitor stopping"),clearInterval(this._pollIntervalId),this._fire("done",a),a},j.prototype._print=function(a){this._debug&&console.log(a)},k.prototype=b.util.heir(j.prototype),k.prototype.constructor=j,k.prototype._swarmPoller=function(a){var c=this;this._print("polling for swarm..."),this._swarm.getStatus(function(d,e){if(d)return c._fire("error",d);var f=e.get("status");c._print("swarm status: "+f),f!==c._lastStatus&&c.statusChange(e),c._lastStatus=f,a(e),f===b.Swarm.STATUS.COMPLETED&&c.stop()})},k.prototype.onStatusChange=function(a){this._statusChangeListeners.push({trigger:g,fn:a})},k.prototype.onStatus=function(a,b){this._statusChangeListeners.push({trigger:a,fn:b})},k.prototype.statusChange=function(a){this._print("SwarmMonitor calling statusChange listeners"),this._statusChangeListeners.forEach(function(b){var c=b.trigger,d=b.fn;(c===g||c===a.get("status"))&&d(a)})},l.prototype=b.util.heir(j.prototype),l.prototype.constructor=j,l.prototype._outputPoller=function(a){var b=this;this._print("polling for new model output..."),this._model.getOutputData(b._getOutputDataOpts,function(c,d){var e=!1,f,g=b._lastRowIdSeen;if(c)return b._print(c),b._fire("error",c);f=d.data.slice(1,d.data.length),d.data=b._processOutputData(d.data,d.meta),d.data.length&&g!==i(d)&&(e=!0,b._lastNewDataTime=new Date),b._data(d,f),b._lastPollTime=(new Date).getTime(),a(d,e)})},l.prototype.onData=function(a){this._dataListeners.push(a)},l.prototype._data=function(a,b){this._print("notifying "+this._dataListeners.length+" listener of new data"),this._dataListeners.forEach(function(c){c(a,b)})},l.prototype._processOutputData=function(a,b){var c=this,d,e,f,g=a.slice(1,a.length),i,j;return g.length===0||g[0].length===0?[]:(i=g[0][0],j=g[g.length-2][0],this._lastRowIdSeen===-1?e=g:i<this._lastRowIdSeen?(d=h(g,function(a){return a[0]===c._lastRowIdSeen+1}),d?e=g.slice(d):e=[]):i+1===this._lastRowIdSeen?e=g:(c._print("data gap"),c._fire("error",new Error("There was a data gap while retrieving predictions from the API.")),e=g),this._lastRowIdSeen===j&&(f=((new Date).getTime()-this._lastNewDataTime)/1e3,b.modelStatus!=="swarming"&&f>this._timeout&&(this._print("timeout"),this.stop())),this._lastRowIdSeen=j,e)},b.SwarmMonitor=k,b.PredictionMonitor=l})(window);