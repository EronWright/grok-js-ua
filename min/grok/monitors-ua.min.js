/*
 * ----------------------------------------------------------------------
 *  Copyright (C) 2006-2012 Numenta Inc. All rights reserved.
 *
 *  The information and source code contained herein is the
 *  exclusive property of Numenta Inc. No part of this software
 *  may be used, reproduced, stored or distributed in any form,
 *  without explicit written authorization from Numenta Inc.
 * ---------------------------------------------------------------------- */(function(a){function f(a,b,c){var d;return Array.prototype.some.call(a,function(a,e,f){if(b.call(c,a,e,f))return d=e,!0}),d}function g(a,b){b=b||{},this._poller=a,typeof b.interval=="undefined"?this._interval=c:typeof b.interval=="number"?this._interval=[b.interval,b.interval*1e3]:this._interval=b.interval,this._increment=b.increment||d,this._currentInterval=this._interval[0],this._debug=b.debug,this._pollIntervalId=-1,this._pollListeners=[],this._doneListeners=[],this._errorListeners=[],this._done=!1}function h(a,b){this._swarm=a,this._lastStatus=undefined,this._statusChangeListeners=[],g.call(this,this._swarmPoller,b)}function i(a,b){b=b||{},this._getOutputDataOpts=b.outputDataOptions||{limit:100},this._model=a,this._dataListeners=[],this._lastRowSeen=b.lastRowIdSeen||-1,this._doneCounter=0,g.call(this,this._outputPoller,b)}var b=a.GROK,c=[3e3,3e6],d=function(a){return a*2},e="any";g.prototype.onPoll=function(a){return this._pollListeners.push(a),this},g.prototype.onDone=function(a){return this._doneListeners.push(a),this},g.prototype.onError=function(a){return this._errorListeners.push(a),this},g.prototype._fire=function(a,b){this._print("Monitor calling "+a+" listeners"),a==="done"&&(this._done=!0),this["_"+a+"Listeners"].forEach(function(a){a(b)})},g.prototype.start=function(){return this._startTime=(new Date).getTime(),this._print("Monitor starting"),this._pollAt(this._currentInterval),this},g.prototype._pollAt=function(a){var b=this,c=!1;this._pollIntervalId&&clearInterval(this._pollIntervalId),b._print("Polling at "+a),this._pollIntervalId=setInterval(function(){if(c)return;c=!0,b._print("Monitor polling..."),b._poller(function(a,d){b._print("Monitor received poll result: "),b._print(a),b._print(d),d?b._currentInterval!==b._interval[0]&&(b._currentInterval=b._interval[0],b._print("Resetting poll interval to "+b._currentInterval),b._pollAt(b._currentInterval)):b._currentInterval!==b._interval[1]&&(b._currentInterval=Math.min(b._increment(b._currentInterval),b._interval[1]),b._pollAt(b._currentInterval)),b._done||b._fire("poll",a),c=!1})},a)},g.prototype.stop=function(){var a=(new Date).getTime()-this._startTime;return this._print("Monitor stopping"),clearInterval(this._pollIntervalId),this._fire("done",a),a},g.prototype._print=function(a){this._debug&&console.log(a)},h.prototype=b.util.heir(g.prototype),h.prototype.constructor=g,h.prototype._swarmPoller=function(a){var b=this;this._print("polling for swarm..."),this._swarm.getStatus(function(c,d){if(c)return b._fire("error",c);var e=d.get("status");b._lastStatus&&e!==b._lastStatus&&b.statusChange(d),b._lastStatus=e,a(d)})},h.prototype.onStatusChange=function(a){this._statusChangeListeners.push({trigger:e,fn:a})},h.prototype.onStatus=function(a,b){this._statusChangeListeners.push({trigger:a,fn:b})},h.prototype.statusChange=function(a){this._print("SwarmMonitor calling statusChange listeners"),this._statusChangeListeners.forEach(function(b){var c=b.trigger,d=b.fn;(c===e||c===a.get("status"))&&d(a)})},i.prototype=b.util.heir(g.prototype),i.prototype.constructor=g,i.prototype._outputPoller=function(a){var b=this;this._print("polling for new model output..."),this._model.getOutputData(b._getOutputDataOpts,function(c,d){var e=!1;if(c)return b._fire("error",c);d.data=b._processOutputData(d.data,d.meta),d.data.length&&(e=!0),b._data(d),a(d,e)})},i.prototype.onData=function(a){this._dataListeners.push(a)},i.prototype._data=function(a){this._dataListeners.forEach(function(b){b(a)})},i.prototype._processOutputData=function(a,b){var c=this,d,e,g,h;return a.length===0||a[0].length===0?[]:(g=a[0][0],h=a[a.length-1][0],this._lastRowSeen===-1?e=a:g<this._lastRowSeen?(d=f(a,function(a){return a[0]===c._lastRowSeen+1}),d?e=a.slice(d):e=[]):g+1===this._lastRowSeen?e=a:(c._fire("error",new Error("There was a data gap while retrieving predictions from the API.")),e=a),this._lastRowSeen===h&&(b.modelStatus!=="swarming"&&this._doneCounter>this._repeatTimes?this.stop():this._doneCounter++),this._lastRowSeen=h,e)},b.SwarmMonitor=h,b.PredictionMonitor=i})(window);